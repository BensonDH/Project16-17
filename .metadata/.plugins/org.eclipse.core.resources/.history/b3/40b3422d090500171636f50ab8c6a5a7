package asteroids.tests;

import static org.junit.Assert.*;


import org.junit.*;


import org.junit.Test;
import asteroids.model.Ship;
import asteroids.util.ModelException;
public class ShipTests {
	
	@Before
	public void SetUp(){

	}
	
	// Normal case
	@Test
	public void constructorNormalCase(){
		Ship ship = new Ship(10, -10, 500, -500, 20, Math.PI);
		
		assert ship.getPositionX() == 10;
		assert ship.getPositionY() == -10;
		assert ship.getVelocityX() == 500;
		assert ship.getVelocityY() == -500;
		assert ship.getRadius() == 20;
		assert ship.getAngle() == Math.PI;
	}
	
	// Constructor Tests
	@Test
	public void defaultConstructor(){
		Ship ship = new Ship();
		
		assert ship.getPositionX() == 0;
		assert ship.getPositionY() == 0;
		assert ship.getVelocityX() == 0;
		assert ship.getVelocityY() == 0;
		assert ship.getRadius() == 10;
		assert ship.getAngle() == 0;
	}
	
	@Test (expected = IllegalArgumentException.class)
	public void invalidPositionXConstructor()throws IllegalArgumentException{
		new Ship(Double.NaN,10,10,10,10,Math.PI);
	}
	@Test(expected = IllegalArgumentException.class)
	public void invalidPositionYConstructor()throws IllegalArgumentException{
		new Ship(10, Double.NaN, 10, 10, 10, Math.PI);		
	}
	
	@Test
	public void invalidVelocityXConstructor() {
		Ship ship1 = new Ship(10, 10, Double.NaN, 10, 10, Math.PI);
		assert ship1.getVelocityX() == 0;
	}
	
	@Test
	public void invalidVelocityYConstructor() {
		Ship ship1 = new Ship(10, 10, 10, Double.NaN, 10, Math.PI);
		assert ship1.getVelocityY() == 0;
	}
	
	@Test
	public void maxValueVelocityConstructor(){
		Ship ship1 = new Ship(10, 10, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, 10, Math.PI);
		Ship ship2 = new Ship(10, 10, Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY, 10, Math.PI);
		
		assert ship1.getVelocityX() == -300000;
		assert ship1.getVelocityY() == 0;
		assert ship1.getTotalVelocity() == 300000;
		
		assert ship2.getVelocityX() == 300000;
		assert ship2.getVelocityY() == 0;
		assert ship2.getTotalVelocity() == 300000;
	}
	// POSITION
	
	@Test
	public void DistanceBetweenTests() {
		
	}

}
