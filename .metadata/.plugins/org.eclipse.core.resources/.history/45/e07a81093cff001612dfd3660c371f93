package asteroids.model;
import be.kuleuven.cs.som.annotate.*;


/**
 * 
 * @author Benson De Heel, Xander 
 *  
 */
public class Ship {
   	static double c = 300000.0;
	
   			
   	// Distance DEFENSIVE
	
	public double getPositionX(){
		return this.x;
	}
	
	public void setPositionX(double x){
		this.x = x;
	}
	private double x;

	public double getPositionY(){
		return this.y;
	}
	
	public void setPositionY(double y){
		this.y = y;
	}
	private double y;

	
	public void move(double duration){
		setPositionX(getPositionX()+getVelocityX()*duration);
		setPositionY(getPositionY()+getVelocityY()*duration);
	}
	// Velocity TOTAL
	public double getVelocityX(){
		return this.velocityX;
	}
	public void setVelocityX(double velocityX){
		if (legitimateVelocity(velocityX, this.velocityY))
			this.velocityX = velocityX;
		else
			this.velocityX = Math.sqrt(Math.pow(c,2.0)-Math.pow(this.velocityY, 2.0));
		
	}
	private double velocityX;
	
	public double getVelocityY(){
		return this.velocityY;
	}
	public void setVelocityY(double velocityY){
		if (legitimateVelocity(velocityX, this.velocityY))
			this.velocityY = velocityY;
		else
			this.velocityY = Math.sqrt(Math.pow(c,2.0)-Math.pow(this.velocityX, 2.0));
	}
	private double velocityY;
	
	private double getTotalVelocity(){
		return Math.sqrt(Math.pow(getVelocityX(), 2.0)+Math.pow(getVelocityY(), 2.0));
	}
	
	/**
	 * Checks whether the total velocity is smaller then or equal to the speed of light (300 000km/s).
	 * 
	 * @param velocityX 
	 * 		  The x-component of the total velocity.
	 * @param velocityY
	 * 		  The y-component of the total velocity.
	 * @return ...
	 * 		   | if (sqrt(velocityY^2+velocityX^2) <= 300 000)
	 * 		   | 	True
	 * 		   | else
	 * 		   | 	False
	 */
	private boolean legitimateVelocity(double velocityX, double velocityY){
		return Math.sqrt(Math.pow(velocityY, 2.0)+Math.pow(velocityX, 2.0))<=300000;
	}
	
	
	// Orientation NOMINAL
	public double getAngle(){
		return this.angle;
	}
	public void setAngle(double angle){
		this.angle = angle;
	}
	private double angle;
	
	public void turn(double angle){
		setAngle(getAngle()+angle);
	}

	// Radius DEFENSIVE
	public double getRadius(){
		return this.radius;
	}
	public void setRadius(double radius){
		
	}
	private double radius;
}

